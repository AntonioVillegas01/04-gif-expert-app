{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categoriasAnteriores","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","gif","id","title","imgUrl","images","downsized_medium","GrifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","props","categories","ReactDOM","render","document","getElementById"],"mappings":"2MAqCeA,EAlCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAElB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAoB,OAAKP,GAAL,mBAAoBO,OACvDN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,OAAM,UAAEH,EAAII,cAAN,aAAE,EAAYC,iBAAiBb,QAX1B,kBAeZM,GAfY,4CAAH,sDCULQ,EAVM,SAAC,GAAsB,IAApBJ,EAAmB,EAAnBA,MAAMC,EAAa,EAAbA,OAE1B,OACI,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAKL,EAAQM,IAAKP,IACvB,4BAAIA,QCuBDQ,EAzBC,SAAC,GAAoB,IAAjBpB,EAAgB,EAAhBA,SAEjB,ECHyB,SAACA,GAEzB,MAA0Bd,mBAAU,CAChCqB,KAAK,GACLc,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,qBAAU,WAENzB,EAAQC,GACHyB,MAAK,SAAAC,GACNH,EAAS,CACLhB,KAAKmB,EACLL,SAAS,SAIlB,CAACrB,IAIGsB,EDnBwBK,CAAa3B,GAAjCc,EAAZ,EAAOP,KAAac,EAApB,EAAoBA,QAEnB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDjB,IAClDqB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACKH,EAAOL,KAAK,SAAAmB,GAAK,OACd,cAAC,EAAD,eAEQA,GADCA,EAAMjB,aEmBpBkB,EA9BM,SAAEC,GAEnB,MAAoC5C,mBAAU,CAAC,cAA/C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KAIA,OACI,qCACI,8CACA,cAAC,EAAD,CACIA,cAAeA,IAEnB,uBACA,6BACK8C,EAAWtB,KAAK,SAAET,GAAF,OACb,cAAC,EAAD,CAEIA,SAAUA,GADLA,YChB7BgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.7fa1809a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n\n        if(inputValue.trim().length > 2){\n            setCategories( categoriasAnteriores => [inputValue, ...categoriasAnteriores ])\n            setInputValue('')\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n        </form>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n\n\nexport default AddCategory;\n","\n\nexport const getGifs = async(category) => {\n    // encodeURI => remove all the spaces\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=Rf2tWbQVcng6WCrg7R6BPNX4YplLjIPR`\n    const resp = await fetch( url )\n    const { data } = await resp.json()\n\n\n    const gifs = data.map( gif => {\n        return {\n            id: gif.id,\n            title: gif.title,\n            imgUrl: gif.images?.downsized_medium.url\n        }\n    } )\n\n    return gifs\n}\n","import React from 'react';\n\nconst GrifGridItem = ( {title,imgUrl} ) => {\n\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={imgUrl} alt={title}/>\n            <p>{title}</p>\n        </div>\n    );\n};\n\nexport default GrifGridItem;\n","import React from 'react';\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\nimport GrifGridItem from \"./GifGridItem\";\n// import PropTypes from 'prop-types';\n\nconst GifGrid = ( { category } ) => {\n\n   const {data:images, loading} =  useFetchGifs(category);\n\n    return (\n        <>\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\n            <div className=\"card-grid\">\n                {images.map( image =>\n                    <GrifGridItem\n                        key={image.id}\n                        {...image}\n                    />\n                )}\n            </div>\n        </>\n\n    );\n};\n\n// GifGrid.propTypes = {\n//\n// };\n\nexport default GifGrid;\n","import { useEffect, useState } from \"react\";\nimport { getGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState( {\n        data:[],\n        loading: true\n    } );\n\n\n    useEffect(()=> {\n\n        getGifs(category)\n            .then(imgs =>{\n            setState({\n                data:imgs,\n                loading: false\n            });\n        })\n\n    }, [category])\n\n\n\n    return state\n}\n","import React, { useState } from 'react';\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\n// import PropTypes from 'prop-types';\n\nconst GifExpertApp = ( props ) => {\n\n    const [categories, setCategories] = useState( ['One Punch'] )\n\n\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory\n                setCategories={setCategories}\n            />\n            <hr/>\n            <ol>\n                {categories.map( ( category ) =>\n                    <GifGrid\n                        key={category}\n                        category={category}\n                    />\n                )}\n            </ol>\n\n        </>\n    );\n};\n\n// GifExpertApp.propTypes = {\n//\n// };\n\nexport default GifExpertApp;\n\n\n// const handleAdd = () => {\n//     setCategories((cats)=>{\n//         return [...cats, 'HunterXHunter']\n//     })\n//      setCategories([...categories, 'HunterXHunter'])\n// }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from \"./GifExpertApp\";\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}